  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module monster_hunter::monster_hunter_monster_catch_result {

  use sui::bcs::{BCS, to_bytes, peel_enum_tag};

  public enum MonsterCatchResult has copy, drop, store {
        Caught,Fled,Missed
    }

  public fun new_caught(): MonsterCatchResult {
    MonsterCatchResult::Caught
  }

  public fun new_fled(): MonsterCatchResult {
    MonsterCatchResult::Fled
  }

  public fun new_missed(): MonsterCatchResult {
    MonsterCatchResult::Missed
  }

  public fun encode(self: MonsterCatchResult): vector<u8> {
    to_bytes(&self)
  }

  public fun decode(bytes: &mut BCS): MonsterCatchResult {
    match(peel_enum_tag(bytes)) {
            0 => MonsterCatchResult::Caught,
            1 => MonsterCatchResult::Fled,
            2 => MonsterCatchResult::Missed,
            _ => abort,
        }
  }
}
